digraph G { 
	rankdir=BT;
subgraph Collections { 
label="Collections";
1 [shape=record,label="{Concept_Collections_12|interface java.util.Map asMap()\nboolean containsEntry(java.lang.Object, java.lang.Object)\nboolean remove(java.lang.Object, java.lang.Object)\nboolean put(java.lang.Object, java.lang.Object)\ninterface java.util.Collection values()\nvoid clear()\nboolean isEmpty()\nint size()\nboolean putAll(com.google.common.collect.Multimap)\nboolean putAll(java.lang.Object, java.lang.Iterable)\nvoid forEach(java.util.function.BiConsumer)\ninterface com.google.common.collect.Multiset keys()\ninterface java.util.Set keySet()\nboolean containsValue(java.lang.Object)\nboolean containsKey(java.lang.Object)\ninterface java.util.Collection entries()\ninterface java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)\ninterface java.util.Collection get(java.lang.Object)\ninterface java.util.Collection removeAll(java.lang.Object)\n|com.google.common.collect.ForwardingMultimap\ncom.google.common.collect.Multimap\n}"];
2 [shape=record,label="{Concept_Collections_10|interface java.util.List replaceValues(java.lang.Object, java.lang.Iterable)\ninterface java.util.List get(java.lang.Object)\ninterface java.util.List removeAll(java.lang.Object)\n|com.google.common.collect.ForwardingListMultimap\ncom.google.common.collect.ListMultimap\n}"];
3 [shape=record,label="{Concept_Collections_7|class com.google.common.collect.ArrayListMultimap create()\nclass com.google.common.collect.ArrayListMultimap create(int, int)\nclass com.google.common.collect.ArrayListMultimap create(com.google.common.collect.Multimap)\nvoid trimToSize()\n|com.google.common.collect.ArrayListMultimap\n}"];
4 [shape=record,label="{Concept_Collections_0||}"];
5 [shape=record,label="{Concept_Collections_11|interface java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)\ninterface java.util.Set get(java.lang.Object)\ninterface java.util.Set entries()\ninterface java.util.Set removeAll(java.lang.Object)\n|com.google.common.collect.ForwardingSetMultimap\ncom.google.common.collect.SetMultimap\n}"];
6 [shape=record,label="{Concept_Collections_9|interface java.util.SortedSet replaceValues(java.lang.Object, java.lang.Iterable)\ninterface java.util.Comparator valueComparator()\ninterface java.util.SortedSet get(java.lang.Object)\ninterface java.util.SortedSet removeAll(java.lang.Object)\n|com.google.common.collect.ForwardingSortedSetMultimap\ncom.google.common.collect.SortedSetMultimap\n}"];
7 [shape=record,label="{Concept_Collections_6|class com.google.common.collect.HashMultimap create(int, int)\nclass com.google.common.collect.HashMultimap create()\nclass com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap)\n|com.google.common.collect.HashMultimap\n}"];
8 [shape=record,label="{Concept_Collections_5|class com.google.common.collect.ImmutableListMultimap inverse()\nclass com.google.common.collect.ImmutableList replaceValues(java.lang.Object, java.lang.Iterable)\nclass com.google.common.collect.ImmutableListMultimap$Builder builder()\ninterface java.util.stream.Collector toImmutableListMultimap(java.util.function.Function, java.util.function.Function)\ninterface java.util.stream.Collector flatteningToImmutableListMultimap(java.util.function.Function, java.util.function.Function)\nclass com.google.common.collect.ImmutableList get(java.lang.Object)\nclass com.google.common.collect.ImmutableListMultimap copyOf(java.lang.Iterable)\nclass com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap)\nclass com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableListMultimap of()\nclass com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableListMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableList removeAll(java.lang.Object)\n|com.google.common.collect.ImmutableListMultimap\n}"];
9 [shape=record,label="{Concept_Collections_4|class com.google.common.collect.ImmutableSetMultimap inverse()\nclass com.google.common.collect.ImmutableSet replaceValues(java.lang.Object, java.lang.Iterable)\nclass com.google.common.collect.ImmutableSetMultimap$Builder builder()\ninterface java.util.stream.Collector toImmutableSetMultimap(java.util.function.Function, java.util.function.Function)\ninterface java.util.stream.Collector flatteningToImmutableSetMultimap(java.util.function.Function, java.util.function.Function)\nclass com.google.common.collect.ImmutableSet get(java.lang.Object)\nclass com.google.common.collect.ImmutableSetMultimap copyOf(java.lang.Iterable)\nclass com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap)\nclass com.google.common.collect.ImmutableSet entries()\nclass com.google.common.collect.ImmutableSetMultimap of()\nclass com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSetMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSet removeAll(java.lang.Object)\n|com.google.common.collect.ImmutableSetMultimap\n}"];
10 [shape=record,label="{Concept_Collections_8|class com.google.common.collect.ImmutableMultimap inverse()\nclass com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)\nclass com.google.common.collect.ImmutableCollection get(java.lang.Object)\nclass com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)\nclass com.google.common.collect.ImmutableMap asMap()\nclass com.google.common.collect.ImmutableMultimap$Builder builder()\nclass com.google.common.collect.ImmutableCollection values()\nclass com.google.common.collect.ImmutableMultimap copyOf(java.lang.Iterable)\nclass com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap)\nclass com.google.common.collect.ImmutableMultiset keys()\nclass com.google.common.collect.ImmutableSet keySet()\nclass com.google.common.collect.ImmutableCollection entries()\nclass com.google.common.collect.ImmutableMultimap of()\nclass com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultimap of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\n|com.google.common.collect.ImmutableMultimap\n}"];
11 [shape=record,label="{Concept_Collections_3|class com.google.common.collect.LinkedHashMultimap create()\nclass com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap)\nclass com.google.common.collect.LinkedHashMultimap create(int, int)\n|com.google.common.collect.LinkedHashMultimap\n}"];
12 [shape=record,label="{Concept_Collections_2|interface java.util.List values()\nclass com.google.common.collect.LinkedListMultimap create(int)\nclass com.google.common.collect.LinkedListMultimap create(com.google.common.collect.Multimap)\nclass com.google.common.collect.LinkedListMultimap create()\ninterface java.util.List entries()\n|com.google.common.collect.LinkedListMultimap\n}"];
13 [shape=record,label="{Concept_Collections_1|interface java.util.SortedMap asMap()\ninterface java.util.NavigableMap asMap()\ninterface java.util.Comparator keyComparator()\ninterface java.util.NavigableSet get(java.lang.Object)\nclass com.google.common.collect.TreeMultimap create(com.google.common.collect.Multimap)\nclass com.google.common.collect.TreeMultimap create(java.util.Comparator, java.util.Comparator)\nclass com.google.common.collect.TreeMultimap create()\ninterface java.util.SortedSet keySet()\ninterface java.util.NavigableSet keySet()\n|com.google.common.collect.TreeMultimap\n}"];
	2 -> 1
	5 -> 1
	10 -> 1
	3 -> 2
	8 -> 2
	12 -> 2
	4 -> 3
	6 -> 5
	7 -> 5
	9 -> 5
	11 -> 5
	13 -> 6
	4 -> 7
	4 -> 8
	4 -> 9
	8 -> 10
	9 -> 10
	4 -> 11
	4 -> 12
	4 -> 13
}
}