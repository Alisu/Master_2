OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-21T10:08:48.692303+02:00' ],		#prior : OmReference [ 'Pharo.4rlczyyrpt7184v7lhmvvr4ow', '11' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #HMIN305,		#affectedPackageName : #HMIN305	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-21T10:08:48.751604+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #HMIN305,			#package : #HMIN305,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-21T10:10:14.142939+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #HMIN305,			#package : #HMIN305,			#sharedPools : OrderedCollection [ ]		},		#protocol : #defaut	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:14:09.175624+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #defaut,			#sourceCode : 'initialize: taille \rindex := 0.\rcapacite := taille.\rcontenu := Array new: capacite.',			#stamp : 'tr 9/21/2018 10:14',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:22:03.181355+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #defaut,			#sourceCode : 'isEmpty\r ^(index = 0). ',			#stamp : 'tr 9/21/2018 10:22',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:22:38.015394+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #defaut,			#sourceCode : 'isFull\r ^(index = capacite). ',			#stamp : 'tr 9/21/2018 10:22',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:23:35.024457+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #defaut,			#sourceCode : 'push: unObjet\r ^(index = capacite). ',			#stamp : 'tr 9/21/2018 10:23',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:29:35.782871+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #defaut,			#sourceCode : 'push: unObjet\r ^(index = capacite). ',			#stamp : 'tr 9/21/2018 10:23',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #defaut,			#sourceCode : 'push: unObjet\r\tself isFull\r\t\tifFalse: \r\t\t\t[contenu at: index put: unObjet. \r \t\t\tindex := index + 1.]\r\t\tifTrue:\r\t\t[ self error: \'I am too full\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:29',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:31:40.974566+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #defaut,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifFalse: \r\t\t\t[contenu at: index put: nil. \r \t\t\tindex := index - 1.]\r\t\tifTrue:\r\t\t[ self error: \'I am too empty\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:31',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:33:46.572989+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcapacite:\t\t<Object>\r\tcontenu:\t\t<Object>\r\tindex:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #HMIN305,			#package : #HMIN305,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcapacite:\t\t<Object>\r\tcontenu:\t\t<Object>\r\tindex:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:36:48.632921+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #defaut,			#sourceCode : 'top\r\t^self isEmpty\r\t\tifFalse: \r\t\t\t[ contenu at: index-1 ]\r\t\tifTrue:\r\t\t\t[ self error: \'Nothing to return\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:36',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:41:13.917926+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #defaut,			#sourceCode : 'push: unObjet\r\tself isFull\r\t\tifFalse: \r\t\t\t[contenu at: index put: unObjet. \r \t\t\tindex := index + 1.]\r\t\tifTrue:\r\t\t[ self error: \'I am too full\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:29',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #defaut,			#sourceCode : 'push: unObjet\r\tself isFull\r\t\tifFalse: \r\t\t\t[index := index + 1.\r\t\t\tcontenu at: index put: unObjet. ]\r\t\tifTrue:\r\t\t[ self error: \'I am too full\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:41',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:41:22.81829+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #defaut,			#sourceCode : 'top\r\t^self isEmpty\r\t\tifFalse: \r\t\t\t[ contenu at: index-1 ]\r\t\tifTrue:\r\t\t\t[ self error: \'Nothing to return\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:36',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #defaut,			#sourceCode : 'top\r\t^self isEmpty\r\t\tifFalse: \r\t\t\t[ contenu at: index ]\r\t\tifTrue:\r\t\t\t[ self error: \'Nothing to return\' ]\r\r ',			#stamp : 'tr 9/21/2018 10:41',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:48:55.048455+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #defaut,			#sourceCode : 'printOn: aStream\r \taStream nextPutAll: \'une Pile, de taille: \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant: \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu do: [ :each | each printOn: aStream. aStream space ].\r\taStream nextPut: $).\r\taStream nextPut: $..',			#stamp : 'tr 9/21/2018 10:48',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T10:54:56.731389+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t',			#stamp : 'tr 9/21/2018 10:54',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:04:25.111207+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t',			#stamp : 'tr 9/21/2018 10:54',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t|ancienContenu| \r\tcapacite := capacite * 2.\r\tancienContenu := contenu.\r\tcontenu := Array new: capacite.\r\tancienContenu do: [ :each | contenu push: each ]',			#stamp : 'tr 9/21/2018 11:04',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:07:30.045862+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t|ancienContenu| \r\tcapacite := capacite * 2.\r\tancienContenu := contenu.\r\tcontenu := Array new: capacite.\r\tancienContenu do: [ :each | contenu push: each ]',			#stamp : 'tr 9/21/2018 11:04',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t|ancienContenu| \r\tcapacite := capacite * 2.\r\tancienContenu := contenu.\r\tcontenu := Array new: capacite.\r\tindex := 0.\r\tancienContenu do: [ :each | index := index + 1. contenu at: index put: each ]',			#stamp : 'tr 9/21/2018 11:07',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:11:31.530212+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t|ancienContenu| \r\tcapacite := capacite * 2.\r\tancienContenu := contenu.\r\tcontenu := Array new: capacite.\r\tindex := 0.\r\tancienContenu do: [ :each | index := index + 1. contenu at: index put: each ]',			#stamp : 'tr 9/21/2018 11:07',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #defaut,			#sourceCode : 'grow\r\t|ancienContenu increment| \r\tcapacite := capacite * 2.\r\tancienContenu := contenu.\r\tcontenu := Array new: capacite.\r\tincrement := 0.\r\tancienContenu do: [ :each | increment := increment + 1. contenu at: increment put: each ]\r\t',			#stamp : 'tr 9/21/2018 11:11',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:24:07.086248+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #initialize,			#protocol : #defaut,			#sourceCode : 'initialize\rtailleDefaut =5.\rindex := 0.\rcapacite := tailleDefaut.\rcontenu := Array new: capacite.',			#stamp : 'tr 9/21/2018 11:24',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:24:17.668821+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #initialize,			#protocol : #defaut,			#sourceCode : 'initialize\rtailleDefaut =5.\rindex := 0.\rcapacite := tailleDefaut.\rcontenu := Array new: capacite.',			#stamp : 'tr 9/21/2018 11:24',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #initialize,			#protocol : #defaut,			#sourceCode : 'initialize\rtailleDefaut := 5.\rindex := 0.\rcapacite := tailleDefaut.\rcontenu := Array new: capacite.',			#stamp : 'tr 9/21/2018 11:24',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:27:49.1358+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''			},			#name : #'Pile class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''				},				#name : #Pile,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #Pile,							#isMetaSide : false						},						#name : #contenu,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #Pile,							#isMetaSide : false						},						#name : #index,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #Pile,							#isMetaSide : false						},						#name : #capacite,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#parent : @12,					#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcapacite:\t\t<Object>\r\tcontenu:\t\t<Object>\r\tindex:\t\t<Object>\r\r\r    Implementation Points',					#stamp : '<historical>'				},				#classVariables : OrderedCollection [					RGClassVariableDefinition {						#annotations : IdentityDictionary {							#className : #Pile,							#isMetaSide : false						},						#name : #tailleDefaut,						#parent : @12					}				],				#category : #HMIN305,				#package : #HMIN305,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #Init	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:30:42.562994+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #Init,			#sourceCode : 'new\r\t^super new initialize.',			#stamp : 'tr 9/21/2018 11:30',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:30:57.92897+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #Init,			#sourceCode : 'new\r\t^super new initialize.',			#stamp : 'tr 9/21/2018 11:30',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #Init,			#sourceCode : 'new\r\t^super initialize.',			#stamp : 'tr 9/21/2018 11:30',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:31:04.982896+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #Init,			#sourceCode : 'new\r\t^super initialize.',			#stamp : 'tr 9/21/2018 11:30',			#package : #HMIN305		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #Init,			#sourceCode : 'new\r\t^super new initialize.',			#stamp : 'tr 9/21/2018 11:31',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:51:25.497959+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LinkedListe\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''			},			#name : #LinkedListe,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedListe class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedListe class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedListe,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #HMIN305,			#package : #HMIN305,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:54:59.564272+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'LinkedListe class\r\tinstanceVariableNames: \'\''			},			#name : #'LinkedListe class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #LinkedListe\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''				},				#name : #LinkedListe,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #HMIN305,				#package : #HMIN305,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #defaut	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:56:41.743043+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LinkedListe class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #defaut,			#sourceCode : 'initialize \r',			#stamp : 'tr 9/21/2018 11:56',			#package : #HMIN305		}	}}OmEntry {	#tags : {		#author : 'tr',		#time : DateAndTime [ '2018-09-21T11:57:10.161225+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Cell\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'HMIN305\''			},			#name : #Cell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Cell class\r\tinstanceVariableNames: \'\''				},				#name : #'Cell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Cell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #HMIN305,			#package : #HMIN305,			#sharedPools : OrderedCollection [ ]		}	}}