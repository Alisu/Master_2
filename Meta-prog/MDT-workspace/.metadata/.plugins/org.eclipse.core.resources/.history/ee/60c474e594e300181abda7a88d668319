package tp.metaprogramming.memo.simulator.handlers;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.eclipse.core.commands.AbstractHandler;
import org.eclipse.core.commands.ExecutionEvent;
import org.eclipse.core.commands.ExecutionException;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.AdapterFactory;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage.Registry;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.URIConverter;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceImpl;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.handlers.HandlerUtil;

import tp.metaprogramming.memo.MemoPackage;
import tp.metaprogramming.memo.World;

import org.eclipse.jface.dialogs.MessageDialog;

public class BirthdayHandler extends AbstractHandler {
	
	private static final String modelPath="/media/rogliano/Disque Local/runtime-New_configuration/tp.metaprogramming.memo.model";
	
    private static ResourceSet resSet=null;
    
    private static EObject loadModel() throws IOException {
        XMIResourceImpl resource = new XMIResourceImpl();
        resSet.getResources().add(resource);
        resource.load(new FileInputStream(new File(modelPath)),new HashMap<Object,Object>());
        return resource.getContents().get(0);
    }
    
    private static void saveModel(EObject container) throws IOException{
        FileOutputStream fileOutputStream=new FileOutputStream(new File(modelPath));
        container.eResource().save(fileOutputStream,new HashMap<Object,Object>());
    }
    
    private static void initResourceSet(){
        if(resSet!= null)
                return;
        resSet=new ResourceSetImpl();
        resSet.getPackageRegistry().put("http://www.example.org.memo",MemoPackage.eINSTANCE);
        resSet.getURIConverter().getURIMap().put(URI.createURI("http://www.example.org.incrementation"),
                URI.createURI(MemoPackage.eINSTANCE.getNsURI()));
    }
    
    @Override
    public Object execute(ExecutionEvent event) throws ExecutionException {
        initResourceSet();
        
        try{
            World container=(World) loadModel();
            container.getPopulation().forEach(p-> p.birthday());
            saveModel(container);
        }catch (IOException e){
            e.printStackTrace();
        }
        
        IWorkbenchWindow window = HandlerUtil.getActiveWorkbenchWindowChecked(event);
        MessageDialog.openInformation(
                window.getShell(),
                "Simulator",
                "HappyBirthday");
        return null;
    }
}
